
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ForkliftScalarFieldEnum = {
  id: 'id',
  brand: 'brand',
  type: 'type',
  eq_no: 'eq_no',
  serial: 'serial',
  location: 'location',
  powertrain: 'powertrain',
  owner: 'owner',
  tahun: 'tahun',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  code: 'code',
  nama: 'nama',
  unit: 'unit',
  description: 'description',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  jenis: 'jenis',
  forklift_id: 'forklift_id',
  tanggal: 'tanggal',
  teknisi: 'teknisi',
  report_no: 'report_no',
  description: 'description',
  recommendation: 'recommendation',
  items_used: 'items_used',
  next_pm: 'next_pm',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.RecordScalarFieldEnum = {
  id: 'id',
  tanggal: 'tanggal',
  report_no: 'report_no',
  forklift_id: 'forklift_id',
  pekerjaan: 'pekerjaan',
  teknisi: 'teknisi',
  description: 'description',
  recommendation: 'recommendation',
  items_used: 'items_used',
  location: 'location',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password',
  role: 'role',
  name: 'name'
};

exports.Prisma.ForkliftOrderByRelevanceFieldEnum = {
  brand: 'brand',
  type: 'type',
  eq_no: 'eq_no',
  serial: 'serial',
  location: 'location',
  powertrain: 'powertrain',
  owner: 'owner',
  status: 'status'
};

exports.Prisma.ItemOrderByRelevanceFieldEnum = {
  code: 'code',
  nama: 'nama',
  unit: 'unit',
  description: 'description',
  status: 'status'
};

exports.Prisma.JobOrderByRelevanceFieldEnum = {
  jenis: 'jenis',
  tanggal: 'tanggal',
  teknisi: 'teknisi',
  report_no: 'report_no',
  description: 'description',
  recommendation: 'recommendation',
  items_used: 'items_used',
  next_pm: 'next_pm'
};

exports.Prisma.RecordOrderByRelevanceFieldEnum = {
  tanggal: 'tanggal',
  report_no: 'report_no',
  pekerjaan: 'pekerjaan',
  teknisi: 'teknisi',
  description: 'description',
  recommendation: 'recommendation',
  items_used: 'items_used',
  location: 'location'
};


exports.Prisma.ModelName = {
  User: 'User',
  Forklift: 'Forklift',
  Item: 'Item',
  Job: 'Job',
  Record: 'Record'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\PSforkliftBeta\\generated\\prisma-mysql",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\PSforkliftBeta\\prisma\\mysql.schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "MYSQL_DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma schema for MySQL target (Tahap 4 - persiapan migrasi)\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma-mysql\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"MYSQL_DATABASE_URL\")\n}\n\nmodel User {\n  id         Int       @id @default(autoincrement())\n  email      String    @unique\n  password   String\n  role       String\n  name       String?\n  created_at DateTime  @default(now())\n  updated_at DateTime  @updatedAt\n  deleted_at DateTime?\n\n  @@index([role], map: \"idx_users_role\")\n  @@map(\"users\")\n}\n\nmodel Forklift {\n  id         Int       @id @default(autoincrement())\n  brand      String?\n  type       String?\n  eq_no      String?   @unique\n  serial     String?   @unique\n  location   String?\n  powertrain String?\n  owner      String?\n  tahun      Int?\n  status     String?\n  created_at DateTime  @default(now())\n  updated_at DateTime  @updatedAt\n  deleted_at DateTime?\n\n  jobs    Job[]\n  records Record[]\n\n  @@index([eq_no], map: \"idx_forklifts_eq_no\")\n  @@index([serial], map: \"idx_forklifts_serial\")\n  @@index([location], map: \"idx_forklifts_location\")\n  @@index([status], map: \"idx_forklifts_status\")\n  @@index([brand, type], map: \"idx_forklifts_brand_type\")\n  @@index([owner], map: \"idx_forklifts_owner\")\n  @@index([tahun], map: \"idx_forklifts_tahun\")\n  @@map(\"forklifts\")\n}\n\nmodel Item {\n  id          Int       @id @default(autoincrement())\n  code        String    @unique\n  nama        String?\n  unit        String?\n  description String?\n  status      String?\n  created_at  DateTime  @default(now())\n  updated_at  DateTime  @updatedAt\n  deleted_at  DateTime?\n\n  @@index([code], map: \"idx_items_code\")\n  @@index([nama], map: \"idx_items_nama\")\n  @@index([description], map: \"idx_items_description\")\n  @@index([status], map: \"idx_items_status\")\n  @@map(\"items\")\n}\n\nmodel Job {\n  id             Int       @id @default(autoincrement())\n  jenis          String?\n  forklift_id    Int\n  tanggal        String\n  teknisi        String?\n  report_no      String?\n  description    String?\n  recommendation String?\n  items_used     String?\n  next_pm        String?\n  created_at     DateTime  @default(now())\n  updated_at     DateTime  @updatedAt\n  deleted_at     DateTime?\n\n  forklift Forklift @relation(fields: [forklift_id], references: [id])\n\n  @@index([forklift_id], map: \"idx_jobs_forklift\")\n  @@index([jenis], map: \"idx_jobs_jenis\")\n  @@index([report_no, forklift_id], map: \"idx_jobs_report_forklift\")\n  @@index([tanggal], map: \"idx_jobs_tanggal\")\n  @@map(\"jobs\")\n}\n\nmodel Record {\n  id             Int       @id @default(autoincrement())\n  tanggal        String\n  report_no      String?\n  forklift_id    Int\n  pekerjaan      String\n  teknisi        String?\n  description    String?\n  recommendation String?\n  items_used     String?\n  location       String?\n  created_at     DateTime  @default(now())\n  updated_at     DateTime  @updatedAt\n  deleted_at     DateTime?\n\n  forklift Forklift @relation(fields: [forklift_id], references: [id])\n\n  @@index([tanggal], map: \"idx_records_tanggal\")\n  @@index([forklift_id], map: \"idx_records_forklift\")\n  @@index([report_no, forklift_id], map: \"idx_records_report_forklift\")\n  @@index([teknisi], map: \"idx_records_teknisi\")\n  @@index([pekerjaan], map: \"idx_records_pekerjaan\")\n  @@index([location], map: \"idx_records_location\")\n  @@index([description], map: \"idx_records_description\")\n  @@index([recommendation], map: \"idx_records_recommendation\")\n  @@index([items_used], map: \"idx_records_items_used\")\n  @@map(\"records\")\n}\n",
  "inlineSchemaHash": "38b7f50d9273002e891c00e7fb35994b71ec96c81dbfb6085b12986b8405ec35",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"Forklift\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eq_no\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serial\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"powertrain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tahun\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"ForkliftToJob\"},{\"name\":\"records\",\"kind\":\"object\",\"type\":\"Record\",\"relationName\":\"ForkliftToRecord\"}],\"dbName\":\"forklifts\"},\"Item\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nama\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"items\"},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jenis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"forklift_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tanggal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teknisi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report_no\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recommendation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items_used\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"next_pm\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"forklift\",\"kind\":\"object\",\"type\":\"Forklift\",\"relationName\":\"ForkliftToJob\"}],\"dbName\":\"jobs\"},\"Record\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tanggal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report_no\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"forklift_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pekerjaan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teknisi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recommendation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items_used\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"forklift\",\"kind\":\"object\",\"type\":\"Forklift\",\"relationName\":\"ForkliftToRecord\"}],\"dbName\":\"records\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    MYSQL_DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['MYSQL_DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.MYSQL_DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

