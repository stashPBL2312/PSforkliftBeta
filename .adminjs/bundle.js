(function (react, adminjs) {
  'use strict';

  const ActionDone = props => {
    const {
      action,
      notice,
      redirectUrl
    } = props || {};
    const addNotice = adminjs.useNotice();
    const msg = react.useMemo(() => {
      if (notice?.message) return notice.message;
      const actionName = action?.name;
      switch (actionName) {
        case 'recover':
          return 'Successfully recovered given record';
        case 'hardDelete':
          return 'Successfully deleted given record';
        case 'softDelete':
          return 'Successfully soft-deleted given record';
        default:
          return 'Action completed successfully';
      }
    }, [notice, action]);
    const listUrl = react.useMemo(() => {
      try {
        const p = window.location.pathname;
        const m = p.match(/^(.*?\/admin\/resources\/[^/]+)/);
        return m ? m[1] : '/admin';
      } catch {
        return '/admin';
      }
    }, []);
    react.useEffect(() => {
      try {
        // Tambahkan notifikasi segera
        addNotice({
          message: msg,
          type: notice?.type || 'success'
        });
        // Jadwalkan ulang notifikasi agar terlihat lebih lama (tanpa mengganggu kecepatan redirect)
        setTimeout(() => {
          try {
            addNotice({
              message: msg,
              type: notice?.type || 'success'
            });
          } catch {}
        }, 1600);
        setTimeout(() => {
          try {
            addNotice({
              message: msg,
              type: notice?.type || 'success'
            });
          } catch {}
        }, 3200);
      } catch {}
      const target = redirectUrl || listUrl;
      try {
        window.location.assign(target);
      } catch {}
    }, [addNotice, msg, notice, redirectUrl, listUrl]);
    return null;
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.ActionNotice = ActionDone;

})(React, AdminJS);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi9zcmMvYWRtaW4vY29tcG9uZW50cy9BY3Rpb25Eb25lLmpzeCIsImVudHJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZU5vdGljZSB9IGZyb20gJ2FkbWluanMnXG5cbmNvbnN0IEFjdGlvbkRvbmUgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgeyBhY3Rpb24sIG5vdGljZSwgcmVkaXJlY3RVcmwgfSA9IHByb3BzIHx8IHt9XG4gIGNvbnN0IGFkZE5vdGljZSA9IHVzZU5vdGljZSgpXG5cbiAgY29uc3QgbXNnID0gdXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKG5vdGljZT8ubWVzc2FnZSkgcmV0dXJuIG5vdGljZS5tZXNzYWdlXG4gICAgY29uc3QgYWN0aW9uTmFtZSA9IGFjdGlvbj8ubmFtZVxuICAgIHN3aXRjaCAoYWN0aW9uTmFtZSkge1xuICAgICAgY2FzZSAncmVjb3Zlcic6IHJldHVybiAnU3VjY2Vzc2Z1bGx5IHJlY292ZXJlZCBnaXZlbiByZWNvcmQnXG4gICAgICBjYXNlICdoYXJkRGVsZXRlJzogcmV0dXJuICdTdWNjZXNzZnVsbHkgZGVsZXRlZCBnaXZlbiByZWNvcmQnXG4gICAgICBjYXNlICdzb2Z0RGVsZXRlJzogcmV0dXJuICdTdWNjZXNzZnVsbHkgc29mdC1kZWxldGVkIGdpdmVuIHJlY29yZCdcbiAgICAgIGRlZmF1bHQ6IHJldHVybiAnQWN0aW9uIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHknXG4gICAgfVxuICB9LCBbbm90aWNlLCBhY3Rpb25dKVxuXG4gIGNvbnN0IGxpc3RVcmwgPSB1c2VNZW1vKCgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZVxuICAgICAgY29uc3QgbSA9IHAubWF0Y2goL14oLio/XFwvYWRtaW5cXC9yZXNvdXJjZXNcXC9bXi9dKykvKVxuICAgICAgcmV0dXJuIG0gPyBtWzFdIDogJy9hZG1pbidcbiAgICB9IGNhdGNoIHtcbiAgICAgIHJldHVybiAnL2FkbWluJ1xuICAgIH1cbiAgfSwgW10pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gVGFtYmFoa2FuIG5vdGlmaWthc2kgc2VnZXJhXG4gICAgICBhZGROb3RpY2UoeyBtZXNzYWdlOiBtc2csIHR5cGU6IChub3RpY2U/LnR5cGUgfHwgJ3N1Y2Nlc3MnKSB9KVxuICAgICAgLy8gSmFkd2Fsa2FuIHVsYW5nIG5vdGlmaWthc2kgYWdhciB0ZXJsaWhhdCBsZWJpaCBsYW1hICh0YW5wYSBtZW5nZ2FuZ2d1IGtlY2VwYXRhbiByZWRpcmVjdClcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0cnkgeyBhZGROb3RpY2UoeyBtZXNzYWdlOiBtc2csIHR5cGU6IChub3RpY2U/LnR5cGUgfHwgJ3N1Y2Nlc3MnKSB9KSB9IGNhdGNoIHt9XG4gICAgICB9LCAxNjAwKVxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRyeSB7IGFkZE5vdGljZSh7IG1lc3NhZ2U6IG1zZywgdHlwZTogKG5vdGljZT8udHlwZSB8fCAnc3VjY2VzcycpIH0pIH0gY2F0Y2gge31cbiAgICAgIH0sIDMyMDApXG4gICAgfSBjYXRjaCB7fVxuICAgIGNvbnN0IHRhcmdldCA9IHJlZGlyZWN0VXJsIHx8IGxpc3RVcmxcbiAgICB0cnkgeyB3aW5kb3cubG9jYXRpb24uYXNzaWduKHRhcmdldCkgfSBjYXRjaCB7fVxuICB9LCBbYWRkTm90aWNlLCBtc2csIG5vdGljZSwgcmVkaXJlY3RVcmwsIGxpc3RVcmxdKVxuXG4gIHJldHVybiBudWxsXG59XG5cbmV4cG9ydCBkZWZhdWx0IEFjdGlvbkRvbmUiLCJBZG1pbkpTLlVzZXJDb21wb25lbnRzID0ge31cbmltcG9ydCBBY3Rpb25Ob3RpY2UgZnJvbSAnLi4vc3JjL2FkbWluL2NvbXBvbmVudHMvQWN0aW9uRG9uZSdcbkFkbWluSlMuVXNlckNvbXBvbmVudHMuQWN0aW9uTm90aWNlID0gQWN0aW9uTm90aWNlIl0sIm5hbWVzIjpbIkFjdGlvbkRvbmUiLCJwcm9wcyIsImFjdGlvbiIsIm5vdGljZSIsInJlZGlyZWN0VXJsIiwiYWRkTm90aWNlIiwidXNlTm90aWNlIiwibXNnIiwidXNlTWVtbyIsIm1lc3NhZ2UiLCJhY3Rpb25OYW1lIiwibmFtZSIsImxpc3RVcmwiLCJwIiwid2luZG93IiwibG9jYXRpb24iLCJwYXRobmFtZSIsIm0iLCJtYXRjaCIsInVzZUVmZmVjdCIsInR5cGUiLCJzZXRUaW1lb3V0IiwidGFyZ2V0IiwiYXNzaWduIiwiQWRtaW5KUyIsIlVzZXJDb21wb25lbnRzIiwiQWN0aW9uTm90aWNlIl0sIm1hcHBpbmdzIjoiOzs7RUFHQSxNQUFNQSxVQUFVLEdBQUlDLEtBQUssSUFBSztJQUM1QixNQUFNO01BQUVDLE1BQU07TUFBRUMsTUFBTTtFQUFFQyxJQUFBQTtFQUFZLEdBQUMsR0FBR0gsS0FBSyxJQUFJLEVBQUU7RUFDbkQsRUFBQSxNQUFNSSxTQUFTLEdBQUdDLGlCQUFTLEVBQUU7RUFFN0IsRUFBQSxNQUFNQyxHQUFHLEdBQUdDLGFBQU8sQ0FBQyxNQUFNO0VBQ3hCLElBQUEsSUFBSUwsTUFBTSxFQUFFTSxPQUFPLEVBQUUsT0FBT04sTUFBTSxDQUFDTSxPQUFPO0VBQzFDLElBQUEsTUFBTUMsVUFBVSxHQUFHUixNQUFNLEVBQUVTLElBQUk7RUFDL0IsSUFBQSxRQUFRRCxVQUFVO0VBQ2hCLE1BQUEsS0FBSyxTQUFTO0VBQUUsUUFBQSxPQUFPLHFDQUFxQztFQUM1RCxNQUFBLEtBQUssWUFBWTtFQUFFLFFBQUEsT0FBTyxtQ0FBbUM7RUFDN0QsTUFBQSxLQUFLLFlBQVk7RUFBRSxRQUFBLE9BQU8sd0NBQXdDO0VBQ2xFLE1BQUE7RUFBUyxRQUFBLE9BQU8sK0JBQStCO0VBQ2pEO0VBQ0YsRUFBQSxDQUFDLEVBQUUsQ0FBQ1AsTUFBTSxFQUFFRCxNQUFNLENBQUMsQ0FBQztFQUVwQixFQUFBLE1BQU1VLE9BQU8sR0FBR0osYUFBTyxDQUFDLE1BQU07TUFDNUIsSUFBSTtFQUNGLE1BQUEsTUFBTUssQ0FBQyxHQUFHQyxNQUFNLENBQUNDLFFBQVEsQ0FBQ0MsUUFBUTtFQUNsQyxNQUFBLE1BQU1DLENBQUMsR0FBR0osQ0FBQyxDQUFDSyxLQUFLLENBQUMsaUNBQWlDLENBQUM7RUFDcEQsTUFBQSxPQUFPRCxDQUFDLEdBQUdBLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRO0VBQzVCLElBQUEsQ0FBQyxDQUFDLE1BQU07RUFDTixNQUFBLE9BQU8sUUFBUTtFQUNqQixJQUFBO0lBQ0YsQ0FBQyxFQUFFLEVBQUUsQ0FBQztFQUVORSxFQUFBQSxlQUFTLENBQUMsTUFBTTtNQUNkLElBQUk7RUFDRjtFQUNBZCxNQUFBQSxTQUFTLENBQUM7RUFBRUksUUFBQUEsT0FBTyxFQUFFRixHQUFHO0VBQUVhLFFBQUFBLElBQUksRUFBR2pCLE1BQU0sRUFBRWlCLElBQUksSUFBSTtFQUFXLE9BQUMsQ0FBQztFQUM5RDtFQUNBQyxNQUFBQSxVQUFVLENBQUMsTUFBTTtVQUNmLElBQUk7RUFBRWhCLFVBQUFBLFNBQVMsQ0FBQztFQUFFSSxZQUFBQSxPQUFPLEVBQUVGLEdBQUc7RUFBRWEsWUFBQUEsSUFBSSxFQUFHakIsTUFBTSxFQUFFaUIsSUFBSSxJQUFJO0VBQVcsV0FBQyxDQUFDO1VBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUNoRixDQUFDLEVBQUUsSUFBSSxDQUFDO0VBQ1JDLE1BQUFBLFVBQVUsQ0FBQyxNQUFNO1VBQ2YsSUFBSTtFQUFFaEIsVUFBQUEsU0FBUyxDQUFDO0VBQUVJLFlBQUFBLE9BQU8sRUFBRUYsR0FBRztFQUFFYSxZQUFBQSxJQUFJLEVBQUdqQixNQUFNLEVBQUVpQixJQUFJLElBQUk7RUFBVyxXQUFDLENBQUM7VUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ2hGLENBQUMsRUFBRSxJQUFJLENBQUM7TUFDVixDQUFDLENBQUMsTUFBTSxDQUFDO0VBQ1QsSUFBQSxNQUFNRSxNQUFNLEdBQUdsQixXQUFXLElBQUlRLE9BQU87TUFDckMsSUFBSTtFQUFFRSxNQUFBQSxNQUFNLENBQUNDLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDRCxNQUFNLENBQUM7TUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0VBQ2hELEVBQUEsQ0FBQyxFQUFFLENBQUNqQixTQUFTLEVBQUVFLEdBQUcsRUFBRUosTUFBTSxFQUFFQyxXQUFXLEVBQUVRLE9BQU8sQ0FBQyxDQUFDO0VBRWxELEVBQUEsT0FBTyxJQUFJO0VBQ2IsQ0FBQzs7RUM3Q0RZLE9BQU8sQ0FBQ0MsY0FBYyxHQUFHLEVBQUU7RUFFM0JELE9BQU8sQ0FBQ0MsY0FBYyxDQUFDQyxZQUFZLEdBQUdBLFVBQVk7Ozs7OzsifQ==
